//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceMetier
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MetierPM")]
    public partial class CompositeType : object
    {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expert", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Expert : ServiceMetier.Utilisateur
    {
        
        private System.DateTime DateNaissanceField;
        
        private string fonctionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateNaissance
        {
            get
            {
                return this.DateNaissanceField;
            }
            set
            {
                this.DateNaissanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fonction
        {
            get
            {
                return this.fonctionField;
            }
            set
            {
                this.fonctionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utilisateur", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceMetier.Lecteur))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceMetier.Expert))]
    public partial class Utilisateur : object
    {
        
        private string AdresseField;
        
        private string EmailField;
        
        private int IdField;
        
        private string NomField;
        
        private string PasswordField;
        
        private string PrenomField;
        
        private string RefreshTokenField;
        
        private System.DateTime RefreshTokenExpiryTimeField;
        
        private string TelephoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse
        {
            get
            {
                return this.AdresseField;
            }
            set
            {
                this.AdresseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom
        {
            get
            {
                return this.NomField;
            }
            set
            {
                this.NomField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom
        {
            get
            {
                return this.PrenomField;
            }
            set
            {
                this.PrenomField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefreshToken
        {
            get
            {
                return this.RefreshTokenField;
            }
            set
            {
                this.RefreshTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RefreshTokenExpiryTime
        {
            get
            {
                return this.RefreshTokenExpiryTimeField;
            }
            set
            {
                this.RefreshTokenExpiryTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone
        {
            get
            {
                return this.TelephoneField;
            }
            set
            {
                this.TelephoneField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lecteur", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Lecteur : ServiceMetier.Utilisateur
    {
        
        private ServiceMetier.Commentaire[] CommentairesField;
        
        private string DateNaissanceField;
        
        private ServiceMetier.Favori[] FavorisField;
        
        private ServiceMetier.Like[] LikesField;
        
        private string SexeField;
        
        private ServiceMetier.Vu[] VusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Commentaire[] Commentaires
        {
            get
            {
                return this.CommentairesField;
            }
            set
            {
                this.CommentairesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateNaissance
        {
            get
            {
                return this.DateNaissanceField;
            }
            set
            {
                this.DateNaissanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Favori[] Favoris
        {
            get
            {
                return this.FavorisField;
            }
            set
            {
                this.FavorisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Like[] Likes
        {
            get
            {
                return this.LikesField;
            }
            set
            {
                this.LikesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexe
        {
            get
            {
                return this.SexeField;
            }
            set
            {
                this.SexeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Vu[] Vus
        {
            get
            {
                return this.VusField;
            }
            set
            {
                this.VusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Commentaire", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Commentaire : object
    {
        
        private System.DateTime DateField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private int IdLecteurField;
        
        private int IdMemoireField;
        
        private ServiceMetier.Lecteur LecteurField;
        
        private ServiceMetier.Memoire MemoireField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLecteur
        {
            get
            {
                return this.IdLecteurField;
            }
            set
            {
                this.IdLecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire
        {
            get
            {
                return this.IdMemoireField;
            }
            set
            {
                this.IdMemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Lecteur Lecteur
        {
            get
            {
                return this.LecteurField;
            }
            set
            {
                this.LecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Memoire Memoire
        {
            get
            {
                return this.MemoireField;
            }
            set
            {
                this.MemoireField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Favori", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Favori : object
    {
        
        private System.DateTime DateField;
        
        private int IdLecteurField;
        
        private int IdMemoireField;
        
        private ServiceMetier.Lecteur LecteurField;
        
        private ServiceMetier.Memoire MemoireField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLecteur
        {
            get
            {
                return this.IdLecteurField;
            }
            set
            {
                this.IdLecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire
        {
            get
            {
                return this.IdMemoireField;
            }
            set
            {
                this.IdMemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Lecteur Lecteur
        {
            get
            {
                return this.LecteurField;
            }
            set
            {
                this.LecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Memoire Memoire
        {
            get
            {
                return this.MemoireField;
            }
            set
            {
                this.MemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Like", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Like : object
    {
        
        private System.DateTime DateField;
        
        private int IdField;
        
        private int IdLecteurField;
        
        private int IdMemoireField;
        
        private ServiceMetier.Lecteur LecteurField;
        
        private ServiceMetier.Memoire MemoireField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLecteur
        {
            get
            {
                return this.IdLecteurField;
            }
            set
            {
                this.IdLecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire
        {
            get
            {
                return this.IdMemoireField;
            }
            set
            {
                this.IdMemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Lecteur Lecteur
        {
            get
            {
                return this.LecteurField;
            }
            set
            {
                this.LecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Memoire Memoire
        {
            get
            {
                return this.MemoireField;
            }
            set
            {
                this.MemoireField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vu", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Vu : object
    {
        
        private System.DateTime DateField;
        
        private int IdLecteurField;
        
        private int IdMemoireField;
        
        private ServiceMetier.Lecteur LecteurField;
        
        private ServiceMetier.Memoire MemoireField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLecteur
        {
            get
            {
                return this.IdLecteurField;
            }
            set
            {
                this.IdLecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire
        {
            get
            {
                return this.IdMemoireField;
            }
            set
            {
                this.IdMemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Lecteur Lecteur
        {
            get
            {
                return this.LecteurField;
            }
            set
            {
                this.LecteurField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Memoire Memoire
        {
            get
            {
                return this.MemoireField;
            }
            set
            {
                this.MemoireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Memoire", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Memoire : object
    {
        
        private ServiceMetier.Commentaire[] CommentairesField;
        
        private string DescriptionField;
        
        private string DocumentPathField;
        
        private ServiceMetier.Favori[] FavorisField;
        
        private int IdField;
        
        private ServiceMetier.Like[] LikesField;
        
        private string TitreField;
        
        private ServiceMetier.Vu[] VusField;
        
        private string imagePathField;
        
        private string statutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Commentaire[] Commentaires
        {
            get
            {
                return this.CommentairesField;
            }
            set
            {
                this.CommentairesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentPath
        {
            get
            {
                return this.DocumentPathField;
            }
            set
            {
                this.DocumentPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Favori[] Favoris
        {
            get
            {
                return this.FavorisField;
            }
            set
            {
                this.FavorisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Like[] Likes
        {
            get
            {
                return this.LikesField;
            }
            set
            {
                this.LikesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titre
        {
            get
            {
                return this.TitreField;
            }
            set
            {
                this.TitreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Vu[] Vus
        {
            get
            {
                return this.VusField;
            }
            set
            {
                this.VusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagePath
        {
            get
            {
                return this.imagePathField;
            }
            set
            {
                this.imagePathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statut
        {
            get
            {
                return this.statutField;
            }
            set
            {
                this.statutField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnneeAcademique", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class AnneeAcademique : object
    {
        
        private int IdField;
        
        private string anneeDebutField;
        
        private string annneeFinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string anneeDebut
        {
            get
            {
                return this.anneeDebutField;
            }
            set
            {
                this.anneeDebutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string annneeFin
        {
            get
            {
                return this.annneeFinField;
            }
            set
            {
                this.annneeFinField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jury", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Jury : object
    {
        
        private int IdField;
        
        private string LibelleField;
        
        private ServiceMetier.MembreJury[] MembreJuriesField;
        
        private ServiceMetier.Verdict[] VerdictsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Libelle
        {
            get
            {
                return this.LibelleField;
            }
            set
            {
                this.LibelleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.MembreJury[] MembreJuries
        {
            get
            {
                return this.MembreJuriesField;
            }
            set
            {
                this.MembreJuriesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Verdict[] Verdicts
        {
            get
            {
                return this.VerdictsField;
            }
            set
            {
                this.VerdictsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembreJury", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class MembreJury : object
    {
        
        private int IdField;
        
        private int IdJuryField;
        
        private ServiceMetier.Jury JuryField;
        
        private string NomField;
        
        private string PrenomField;
        
        private string ProfessionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJury
        {
            get
            {
                return this.IdJuryField;
            }
            set
            {
                this.IdJuryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Jury Jury
        {
            get
            {
                return this.JuryField;
            }
            set
            {
                this.JuryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom
        {
            get
            {
                return this.NomField;
            }
            set
            {
                this.NomField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom
        {
            get
            {
                return this.PrenomField;
            }
            set
            {
                this.PrenomField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profession
        {
            get
            {
                return this.ProfessionField;
            }
            set
            {
                this.ProfessionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Verdict", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.models")]
    public partial class Verdict : object
    {
        
        private string CommentaireField;
        
        private int IdField;
        
        private int IdJuryField;
        
        private ServiceMetier.Jury JuryField;
        
        private string MentionField;
        
        private string NoteField;
        
        private string StatutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commentaire
        {
            get
            {
                return this.CommentaireField;
            }
            set
            {
                this.CommentaireField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJury
        {
            get
            {
                return this.IdJuryField;
            }
            set
            {
                this.IdJuryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceMetier.Jury Jury
        {
            get
            {
                return this.JuryField;
            }
            set
            {
                this.JuryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mention
        {
            get
            {
                return this.MentionField;
            }
            set
            {
                this.MentionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note
        {
            get
            {
                return this.NoteField;
            }
            set
            {
                this.NoteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statut
        {
            get
            {
                return this.StatutField;
            }
            set
            {
                this.StatutField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMetier.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ServiceMetier.CompositeType GetDataUsingDataContract(ServiceMetier.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ServiceMetier.CompositeType> GetDataUsingDataContractAsync(ServiceMetier.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperts", ReplyAction="http://tempuri.org/IService1/GetExpertsResponse")]
        ServiceMetier.Expert[] GetExperts(string Nom, string Prenom, string fonction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExperts", ReplyAction="http://tempuri.org/IService1/GetExpertsResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Expert[]> GetExpertsAsync(string Nom, string Prenom, string fonction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExpert", ReplyAction="http://tempuri.org/IService1/GetExpertResponse")]
        ServiceMetier.Expert GetExpert(System.Nullable<int> idExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExpert", ReplyAction="http://tempuri.org/IService1/GetExpertResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Expert> GetExpertAsync(System.Nullable<int> idExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllExperts", ReplyAction="http://tempuri.org/IService1/getAllExpertsResponse")]
        ServiceMetier.Expert[] getAllExperts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllExperts", ReplyAction="http://tempuri.org/IService1/getAllExpertsResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Expert[]> getAllExpertsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteExpert", ReplyAction="http://tempuri.org/IService1/deleteExpertResponse")]
        bool deleteExpert(System.Nullable<int> idExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteExpert", ReplyAction="http://tempuri.org/IService1/deleteExpertResponse")]
        System.Threading.Tasks.Task<bool> deleteExpertAsync(System.Nullable<int> idExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateExpert", ReplyAction="http://tempuri.org/IService1/updateExpertResponse")]
        bool updateExpert(int id, ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateExpert", ReplyAction="http://tempuri.org/IService1/updateExpertResponse")]
        System.Threading.Tasks.Task<bool> updateExpertAsync(int id, ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addExpert", ReplyAction="http://tempuri.org/IService1/addExpertResponse")]
        bool addExpert(ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addExpert", ReplyAction="http://tempuri.org/IService1/addExpertResponse")]
        System.Threading.Tasks.Task<bool> addExpertAsync(ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        bool addUser(ServiceMetier.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.Threading.Tasks.Task<bool> addUserAsync(ServiceMetier.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
        bool updateUser(ServiceMetier.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateUser", ReplyAction="http://tempuri.org/IService1/updateUserResponse")]
        System.Threading.Tasks.Task<bool> updateUserAsync(ServiceMetier.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        bool deleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteUser", ReplyAction="http://tempuri.org/IService1/deleteUserResponse")]
        System.Threading.Tasks.Task<bool> deleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllUsers", ReplyAction="http://tempuri.org/IService1/getAllUsersResponse")]
        ServiceMetier.Utilisateur[] getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllUsers", ReplyAction="http://tempuri.org/IService1/getAllUsersResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Utilisateur[]> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        ServiceMetier.Utilisateur GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Utilisateur> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetUtilisateursResponse")]
        ServiceMetier.Utilisateur[] GetUtilisateurs(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetUtilisateursResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Utilisateur[]> GetUtilisateursAsync(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMemoire", ReplyAction="http://tempuri.org/IService1/AddMemoireResponse")]
        bool AddMemoire(ServiceMetier.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMemoire", ReplyAction="http://tempuri.org/IService1/AddMemoireResponse")]
        System.Threading.Tasks.Task<bool> AddMemoireAsync(ServiceMetier.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMemoire", ReplyAction="http://tempuri.org/IService1/UpdateMemoireResponse")]
        bool UpdateMemoire(ServiceMetier.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMemoire", ReplyAction="http://tempuri.org/IService1/UpdateMemoireResponse")]
        System.Threading.Tasks.Task<bool> UpdateMemoireAsync(ServiceMetier.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMemoire", ReplyAction="http://tempuri.org/IService1/DeleteMemoireResponse")]
        bool DeleteMemoire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMemoire", ReplyAction="http://tempuri.org/IService1/DeleteMemoireResponse")]
        System.Threading.Tasks.Task<bool> DeleteMemoireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMemoire", ReplyAction="http://tempuri.org/IService1/GetMemoireResponse")]
        ServiceMetier.Memoire GetMemoire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMemoire", ReplyAction="http://tempuri.org/IService1/GetMemoireResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Memoire> GetMemoireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMemoires", ReplyAction="http://tempuri.org/IService1/GetAllMemoiresResponse")]
        ServiceMetier.Memoire[] GetAllMemoires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMemoires", ReplyAction="http://tempuri.org/IService1/GetAllMemoiresResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Memoire[]> GetAllMemoiresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchMemoires", ReplyAction="http://tempuri.org/IService1/SearchMemoiresResponse")]
        ServiceMetier.Memoire[] SearchMemoires(string titre, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchMemoires", ReplyAction="http://tempuri.org/IService1/SearchMemoiresResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Memoire[]> SearchMemoiresAsync(string titre, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAnneeAcademique", ReplyAction="http://tempuri.org/IService1/AddAnneeAcademiqueResponse")]
        bool AddAnneeAcademique(ServiceMetier.AnneeAcademique anneeAcademique);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAnneeAcademique", ReplyAction="http://tempuri.org/IService1/AddAnneeAcademiqueResponse")]
        System.Threading.Tasks.Task<bool> AddAnneeAcademiqueAsync(ServiceMetier.AnneeAcademique anneeAcademique);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAnneeAcademique", ReplyAction="http://tempuri.org/IService1/UpdateAnneeAcademiqueResponse")]
        bool UpdateAnneeAcademique(ServiceMetier.AnneeAcademique anneeAcademique);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAnneeAcademique", ReplyAction="http://tempuri.org/IService1/UpdateAnneeAcademiqueResponse")]
        System.Threading.Tasks.Task<bool> UpdateAnneeAcademiqueAsync(ServiceMetier.AnneeAcademique anneeAcademique);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAnneeAcademique", ReplyAction="http://tempuri.org/IService1/DeleteAnneeAcademiqueResponse")]
        bool DeleteAnneeAcademique(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAnneeAcademique", ReplyAction="http://tempuri.org/IService1/DeleteAnneeAcademiqueResponse")]
        System.Threading.Tasks.Task<bool> DeleteAnneeAcademiqueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAnneeAcademique", ReplyAction="http://tempuri.org/IService1/GetAnneeAcademiqueResponse")]
        ServiceMetier.AnneeAcademique GetAnneeAcademique(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAnneeAcademique", ReplyAction="http://tempuri.org/IService1/GetAnneeAcademiqueResponse")]
        System.Threading.Tasks.Task<ServiceMetier.AnneeAcademique> GetAnneeAcademiqueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAnneeAcademiques", ReplyAction="http://tempuri.org/IService1/GetAllAnneeAcademiquesResponse")]
        ServiceMetier.AnneeAcademique[] GetAllAnneeAcademiques();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAnneeAcademiques", ReplyAction="http://tempuri.org/IService1/GetAllAnneeAcademiquesResponse")]
        System.Threading.Tasks.Task<ServiceMetier.AnneeAcademique[]> GetAllAnneeAcademiquesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCommentaire", ReplyAction="http://tempuri.org/IService1/AddCommentaireResponse")]
        bool AddCommentaire(ServiceMetier.Commentaire commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCommentaire", ReplyAction="http://tempuri.org/IService1/AddCommentaireResponse")]
        System.Threading.Tasks.Task<bool> AddCommentaireAsync(ServiceMetier.Commentaire commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCommentaire", ReplyAction="http://tempuri.org/IService1/UpdateCommentaireResponse")]
        bool UpdateCommentaire(ServiceMetier.Commentaire commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCommentaire", ReplyAction="http://tempuri.org/IService1/UpdateCommentaireResponse")]
        System.Threading.Tasks.Task<bool> UpdateCommentaireAsync(ServiceMetier.Commentaire commentaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCommentaire", ReplyAction="http://tempuri.org/IService1/DeleteCommentaireResponse")]
        bool DeleteCommentaire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCommentaire", ReplyAction="http://tempuri.org/IService1/DeleteCommentaireResponse")]
        System.Threading.Tasks.Task<bool> DeleteCommentaireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCommentaire", ReplyAction="http://tempuri.org/IService1/GetCommentaireResponse")]
        ServiceMetier.Commentaire GetCommentaire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCommentaire", ReplyAction="http://tempuri.org/IService1/GetCommentaireResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Commentaire> GetCommentaireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCommentaires", ReplyAction="http://tempuri.org/IService1/GetAllCommentairesResponse")]
        ServiceMetier.Commentaire[] GetAllCommentaires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCommentaires", ReplyAction="http://tempuri.org/IService1/GetAllCommentairesResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Commentaire[]> GetAllCommentairesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFavori", ReplyAction="http://tempuri.org/IService1/AddFavoriResponse")]
        bool AddFavori(ServiceMetier.Favori favori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFavori", ReplyAction="http://tempuri.org/IService1/AddFavoriResponse")]
        System.Threading.Tasks.Task<bool> AddFavoriAsync(ServiceMetier.Favori favori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFavori", ReplyAction="http://tempuri.org/IService1/UpdateFavoriResponse")]
        bool UpdateFavori(ServiceMetier.Favori favori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFavori", ReplyAction="http://tempuri.org/IService1/UpdateFavoriResponse")]
        System.Threading.Tasks.Task<bool> UpdateFavoriAsync(ServiceMetier.Favori favori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFavori", ReplyAction="http://tempuri.org/IService1/DeleteFavoriResponse")]
        bool DeleteFavori(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFavori", ReplyAction="http://tempuri.org/IService1/DeleteFavoriResponse")]
        System.Threading.Tasks.Task<bool> DeleteFavoriAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFavori", ReplyAction="http://tempuri.org/IService1/GetFavoriResponse")]
        ServiceMetier.Favori GetFavori(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFavori", ReplyAction="http://tempuri.org/IService1/GetFavoriResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Favori> GetFavoriAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllFavoris", ReplyAction="http://tempuri.org/IService1/GetAllFavorisResponse")]
        ServiceMetier.Favori[] GetAllFavoris();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllFavoris", ReplyAction="http://tempuri.org/IService1/GetAllFavorisResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Favori[]> GetAllFavorisAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddJury", ReplyAction="http://tempuri.org/IService1/AddJuryResponse")]
        bool AddJury(ServiceMetier.Jury jury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddJury", ReplyAction="http://tempuri.org/IService1/AddJuryResponse")]
        System.Threading.Tasks.Task<bool> AddJuryAsync(ServiceMetier.Jury jury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateJury", ReplyAction="http://tempuri.org/IService1/UpdateJuryResponse")]
        bool UpdateJury(ServiceMetier.Jury jury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateJury", ReplyAction="http://tempuri.org/IService1/UpdateJuryResponse")]
        System.Threading.Tasks.Task<bool> UpdateJuryAsync(ServiceMetier.Jury jury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteJury", ReplyAction="http://tempuri.org/IService1/DeleteJuryResponse")]
        bool DeleteJury(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteJury", ReplyAction="http://tempuri.org/IService1/DeleteJuryResponse")]
        System.Threading.Tasks.Task<bool> DeleteJuryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJury", ReplyAction="http://tempuri.org/IService1/GetJuryResponse")]
        ServiceMetier.Jury GetJury(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetJury", ReplyAction="http://tempuri.org/IService1/GetJuryResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Jury> GetJuryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllJuries", ReplyAction="http://tempuri.org/IService1/GetAllJuriesResponse")]
        ServiceMetier.Jury[] GetAllJuries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllJuries", ReplyAction="http://tempuri.org/IService1/GetAllJuriesResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Jury[]> GetAllJuriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLecteur", ReplyAction="http://tempuri.org/IService1/AddLecteurResponse")]
        bool AddLecteur(ServiceMetier.Lecteur lecteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLecteur", ReplyAction="http://tempuri.org/IService1/AddLecteurResponse")]
        System.Threading.Tasks.Task<bool> AddLecteurAsync(ServiceMetier.Lecteur lecteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLecteur", ReplyAction="http://tempuri.org/IService1/updateLecteurResponse")]
        bool updateLecteur(int id, ServiceMetier.Lecteur lecteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateLecteur", ReplyAction="http://tempuri.org/IService1/updateLecteurResponse")]
        System.Threading.Tasks.Task<bool> updateLecteurAsync(int id, ServiceMetier.Lecteur lecteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLecteur", ReplyAction="http://tempuri.org/IService1/DeleteLecteurResponse")]
        bool DeleteLecteur(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLecteur", ReplyAction="http://tempuri.org/IService1/DeleteLecteurResponse")]
        System.Threading.Tasks.Task<bool> DeleteLecteurAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecteur", ReplyAction="http://tempuri.org/IService1/GetLecteurResponse")]
        ServiceMetier.Lecteur GetLecteur(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecteur", ReplyAction="http://tempuri.org/IService1/GetLecteurResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Lecteur> GetLecteurAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLecteurs", ReplyAction="http://tempuri.org/IService1/GetAllLecteursResponse")]
        ServiceMetier.Lecteur[] GetAllLecteurs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLecteurs", ReplyAction="http://tempuri.org/IService1/GetAllLecteursResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> GetAllLecteursAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLecteurs", ReplyAction="http://tempuri.org/IService1/getLecteursResponse")]
        ServiceMetier.Lecteur[] getLecteurs(string prenom, string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getLecteurs", ReplyAction="http://tempuri.org/IService1/getLecteursResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> getLecteursAsync(string prenom, string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLike", ReplyAction="http://tempuri.org/IService1/AddLikeResponse")]
        bool AddLike(ServiceMetier.Like like);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLike", ReplyAction="http://tempuri.org/IService1/AddLikeResponse")]
        System.Threading.Tasks.Task<bool> AddLikeAsync(ServiceMetier.Like like);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateLike", ReplyAction="http://tempuri.org/IService1/UpdateLikeResponse")]
        bool UpdateLike(ServiceMetier.Like like);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateLike", ReplyAction="http://tempuri.org/IService1/UpdateLikeResponse")]
        System.Threading.Tasks.Task<bool> UpdateLikeAsync(ServiceMetier.Like like);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLike", ReplyAction="http://tempuri.org/IService1/DeleteLikeResponse")]
        bool DeleteLike(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLike", ReplyAction="http://tempuri.org/IService1/DeleteLikeResponse")]
        System.Threading.Tasks.Task<bool> DeleteLikeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLike", ReplyAction="http://tempuri.org/IService1/GetLikeResponse")]
        ServiceMetier.Like GetLike(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLike", ReplyAction="http://tempuri.org/IService1/GetLikeResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Like> GetLikeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLikes", ReplyAction="http://tempuri.org/IService1/GetAllLikesResponse")]
        ServiceMetier.Like[] GetAllLikes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllLikes", ReplyAction="http://tempuri.org/IService1/GetAllLikesResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Like[]> GetAllLikesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMembreJury", ReplyAction="http://tempuri.org/IService1/AddMembreJuryResponse")]
        bool AddMembreJury(ServiceMetier.MembreJury membreJury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMembreJury", ReplyAction="http://tempuri.org/IService1/AddMembreJuryResponse")]
        System.Threading.Tasks.Task<bool> AddMembreJuryAsync(ServiceMetier.MembreJury membreJury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMembreJury", ReplyAction="http://tempuri.org/IService1/UpdateMembreJuryResponse")]
        bool UpdateMembreJury(ServiceMetier.MembreJury membreJury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMembreJury", ReplyAction="http://tempuri.org/IService1/UpdateMembreJuryResponse")]
        System.Threading.Tasks.Task<bool> UpdateMembreJuryAsync(ServiceMetier.MembreJury membreJury);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMembreJury", ReplyAction="http://tempuri.org/IService1/DeleteMembreJuryResponse")]
        bool DeleteMembreJury(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMembreJury", ReplyAction="http://tempuri.org/IService1/DeleteMembreJuryResponse")]
        System.Threading.Tasks.Task<bool> DeleteMembreJuryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMembresJury", ReplyAction="http://tempuri.org/IService1/GetAllMembresJuryResponse")]
        ServiceMetier.MembreJury[] GetAllMembresJury();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMembresJury", ReplyAction="http://tempuri.org/IService1/GetAllMembresJuryResponse")]
        System.Threading.Tasks.Task<ServiceMetier.MembreJury[]> GetAllMembresJuryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMembreJury", ReplyAction="http://tempuri.org/IService1/GetMembreJuryResponse")]
        ServiceMetier.MembreJury GetMembreJury(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMembreJury", ReplyAction="http://tempuri.org/IService1/GetMembreJuryResponse")]
        System.Threading.Tasks.Task<ServiceMetier.MembreJury> GetMembreJuryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchMembresJury", ReplyAction="http://tempuri.org/IService1/SearchMembresJuryResponse")]
        ServiceMetier.MembreJury[] SearchMembresJury(string nom, string prenom, string profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchMembresJury", ReplyAction="http://tempuri.org/IService1/SearchMembresJuryResponse")]
        System.Threading.Tasks.Task<ServiceMetier.MembreJury[]> SearchMembresJuryAsync(string nom, string prenom, string profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVerdict", ReplyAction="http://tempuri.org/IService1/AddVerdictResponse")]
        bool AddVerdict(ServiceMetier.Verdict verdict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVerdict", ReplyAction="http://tempuri.org/IService1/AddVerdictResponse")]
        System.Threading.Tasks.Task<bool> AddVerdictAsync(ServiceMetier.Verdict verdict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVerdict", ReplyAction="http://tempuri.org/IService1/UpdateVerdictResponse")]
        bool UpdateVerdict(ServiceMetier.Verdict verdict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVerdict", ReplyAction="http://tempuri.org/IService1/UpdateVerdictResponse")]
        System.Threading.Tasks.Task<bool> UpdateVerdictAsync(ServiceMetier.Verdict verdict);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVerdict", ReplyAction="http://tempuri.org/IService1/DeleteVerdictResponse")]
        bool DeleteVerdict(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVerdict", ReplyAction="http://tempuri.org/IService1/DeleteVerdictResponse")]
        System.Threading.Tasks.Task<bool> DeleteVerdictAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllVerdicts", ReplyAction="http://tempuri.org/IService1/GetAllVerdictsResponse")]
        ServiceMetier.Verdict[] GetAllVerdicts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllVerdicts", ReplyAction="http://tempuri.org/IService1/GetAllVerdictsResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Verdict[]> GetAllVerdictsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVerdict", ReplyAction="http://tempuri.org/IService1/GetVerdictResponse")]
        ServiceMetier.Verdict GetVerdict(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVerdict", ReplyAction="http://tempuri.org/IService1/GetVerdictResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Verdict> GetVerdictAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchVerdicts", ReplyAction="http://tempuri.org/IService1/SearchVerdictsResponse")]
        ServiceMetier.Verdict[] SearchVerdicts(string statut, string mention);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchVerdicts", ReplyAction="http://tempuri.org/IService1/SearchVerdictsResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Verdict[]> SearchVerdictsAsync(string statut, string mention);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVu", ReplyAction="http://tempuri.org/IService1/AddVuResponse")]
        bool AddVu(ServiceMetier.Vu vu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddVu", ReplyAction="http://tempuri.org/IService1/AddVuResponse")]
        System.Threading.Tasks.Task<bool> AddVuAsync(ServiceMetier.Vu vu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVu", ReplyAction="http://tempuri.org/IService1/UpdateVuResponse")]
        bool UpdateVu(ServiceMetier.Vu vu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVu", ReplyAction="http://tempuri.org/IService1/UpdateVuResponse")]
        System.Threading.Tasks.Task<bool> UpdateVuAsync(ServiceMetier.Vu vu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVu", ReplyAction="http://tempuri.org/IService1/DeleteVuResponse")]
        bool DeleteVu(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVu", ReplyAction="http://tempuri.org/IService1/DeleteVuResponse")]
        System.Threading.Tasks.Task<bool> DeleteVuAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVu", ReplyAction="http://tempuri.org/IService1/GetVuResponse")]
        ServiceMetier.Vu GetVu(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetVu", ReplyAction="http://tempuri.org/IService1/GetVuResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Vu> GetVuAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllVus", ReplyAction="http://tempuri.org/IService1/GetAllVusResponse")]
        ServiceMetier.Vu[] GetAllVus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllVus", ReplyAction="http://tempuri.org/IService1/GetAllVusResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Vu[]> GetAllVusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchExperts", ReplyAction="http://tempuri.org/IService1/SearchExpertsResponse")]
        ServiceMetier.Expert[] SearchExperts(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchExperts", ReplyAction="http://tempuri.org/IService1/SearchExpertsResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Expert[]> SearchExpertsAsync(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchLecteurs", ReplyAction="http://tempuri.org/IService1/SearchLecteursResponse")]
        ServiceMetier.Lecteur[] SearchLecteurs(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchLecteurs", ReplyAction="http://tempuri.org/IService1/SearchLecteursResponse")]
        System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> SearchLecteursAsync(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserExists", ReplyAction="http://tempuri.org/IService1/UserExistsResponse")]
        bool UserExists(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserExists", ReplyAction="http://tempuri.org/IService1/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IService1Channel : ServiceMetier.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceMetier.IService1>, ServiceMetier.IService1
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string GetData(int value)
        {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value)
        {
            return base.Channel.GetDataAsync(value);
        }
        
        public ServiceMetier.CompositeType GetDataUsingDataContract(ServiceMetier.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.CompositeType> GetDataUsingDataContractAsync(ServiceMetier.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ServiceMetier.Expert[] GetExperts(string Nom, string Prenom, string fonction)
        {
            return base.Channel.GetExperts(Nom, Prenom, fonction);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Expert[]> GetExpertsAsync(string Nom, string Prenom, string fonction)
        {
            return base.Channel.GetExpertsAsync(Nom, Prenom, fonction);
        }
        
        public ServiceMetier.Expert GetExpert(System.Nullable<int> idExpert)
        {
            return base.Channel.GetExpert(idExpert);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Expert> GetExpertAsync(System.Nullable<int> idExpert)
        {
            return base.Channel.GetExpertAsync(idExpert);
        }
        
        public ServiceMetier.Expert[] getAllExperts()
        {
            return base.Channel.getAllExperts();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Expert[]> getAllExpertsAsync()
        {
            return base.Channel.getAllExpertsAsync();
        }
        
        public bool deleteExpert(System.Nullable<int> idExpert)
        {
            return base.Channel.deleteExpert(idExpert);
        }
        
        public System.Threading.Tasks.Task<bool> deleteExpertAsync(System.Nullable<int> idExpert)
        {
            return base.Channel.deleteExpertAsync(idExpert);
        }
        
        public bool updateExpert(int id, ServiceMetier.Expert expert)
        {
            return base.Channel.updateExpert(id, expert);
        }
        
        public System.Threading.Tasks.Task<bool> updateExpertAsync(int id, ServiceMetier.Expert expert)
        {
            return base.Channel.updateExpertAsync(id, expert);
        }
        
        public bool addExpert(ServiceMetier.Expert expert)
        {
            return base.Channel.addExpert(expert);
        }
        
        public System.Threading.Tasks.Task<bool> addExpertAsync(ServiceMetier.Expert expert)
        {
            return base.Channel.addExpertAsync(expert);
        }
        
        public bool addUser(ServiceMetier.Utilisateur utilisateur)
        {
            return base.Channel.addUser(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> addUserAsync(ServiceMetier.Utilisateur utilisateur)
        {
            return base.Channel.addUserAsync(utilisateur);
        }
        
        public bool updateUser(ServiceMetier.Utilisateur utilisateur)
        {
            return base.Channel.updateUser(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> updateUserAsync(ServiceMetier.Utilisateur utilisateur)
        {
            return base.Channel.updateUserAsync(utilisateur);
        }
        
        public bool deleteUser(int id)
        {
            return base.Channel.deleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserAsync(int id)
        {
            return base.Channel.deleteUserAsync(id);
        }
        
        public ServiceMetier.Utilisateur[] getAllUsers()
        {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Utilisateur[]> getAllUsersAsync()
        {
            return base.Channel.getAllUsersAsync();
        }
        
        public ServiceMetier.Utilisateur GetUser(int id)
        {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Utilisateur> GetUserAsync(int id)
        {
            return base.Channel.GetUserAsync(id);
        }
        
        public ServiceMetier.Utilisateur[] GetUtilisateurs(string nom, string prenom)
        {
            return base.Channel.GetUtilisateurs(nom, prenom);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Utilisateur[]> GetUtilisateursAsync(string nom, string prenom)
        {
            return base.Channel.GetUtilisateursAsync(nom, prenom);
        }
        
        public bool AddMemoire(ServiceMetier.Memoire memoire)
        {
            return base.Channel.AddMemoire(memoire);
        }
        
        public System.Threading.Tasks.Task<bool> AddMemoireAsync(ServiceMetier.Memoire memoire)
        {
            return base.Channel.AddMemoireAsync(memoire);
        }
        
        public bool UpdateMemoire(ServiceMetier.Memoire memoire)
        {
            return base.Channel.UpdateMemoire(memoire);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMemoireAsync(ServiceMetier.Memoire memoire)
        {
            return base.Channel.UpdateMemoireAsync(memoire);
        }
        
        public bool DeleteMemoire(int id)
        {
            return base.Channel.DeleteMemoire(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMemoireAsync(int id)
        {
            return base.Channel.DeleteMemoireAsync(id);
        }
        
        public ServiceMetier.Memoire GetMemoire(int id)
        {
            return base.Channel.GetMemoire(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Memoire> GetMemoireAsync(int id)
        {
            return base.Channel.GetMemoireAsync(id);
        }
        
        public ServiceMetier.Memoire[] GetAllMemoires()
        {
            return base.Channel.GetAllMemoires();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Memoire[]> GetAllMemoiresAsync()
        {
            return base.Channel.GetAllMemoiresAsync();
        }
        
        public ServiceMetier.Memoire[] SearchMemoires(string titre, string description)
        {
            return base.Channel.SearchMemoires(titre, description);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Memoire[]> SearchMemoiresAsync(string titre, string description)
        {
            return base.Channel.SearchMemoiresAsync(titre, description);
        }
        
        public bool AddAnneeAcademique(ServiceMetier.AnneeAcademique anneeAcademique)
        {
            return base.Channel.AddAnneeAcademique(anneeAcademique);
        }
        
        public System.Threading.Tasks.Task<bool> AddAnneeAcademiqueAsync(ServiceMetier.AnneeAcademique anneeAcademique)
        {
            return base.Channel.AddAnneeAcademiqueAsync(anneeAcademique);
        }
        
        public bool UpdateAnneeAcademique(ServiceMetier.AnneeAcademique anneeAcademique)
        {
            return base.Channel.UpdateAnneeAcademique(anneeAcademique);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAnneeAcademiqueAsync(ServiceMetier.AnneeAcademique anneeAcademique)
        {
            return base.Channel.UpdateAnneeAcademiqueAsync(anneeAcademique);
        }
        
        public bool DeleteAnneeAcademique(int id)
        {
            return base.Channel.DeleteAnneeAcademique(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAnneeAcademiqueAsync(int id)
        {
            return base.Channel.DeleteAnneeAcademiqueAsync(id);
        }
        
        public ServiceMetier.AnneeAcademique GetAnneeAcademique(int id)
        {
            return base.Channel.GetAnneeAcademique(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.AnneeAcademique> GetAnneeAcademiqueAsync(int id)
        {
            return base.Channel.GetAnneeAcademiqueAsync(id);
        }
        
        public ServiceMetier.AnneeAcademique[] GetAllAnneeAcademiques()
        {
            return base.Channel.GetAllAnneeAcademiques();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.AnneeAcademique[]> GetAllAnneeAcademiquesAsync()
        {
            return base.Channel.GetAllAnneeAcademiquesAsync();
        }
        
        public bool AddCommentaire(ServiceMetier.Commentaire commentaire)
        {
            return base.Channel.AddCommentaire(commentaire);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentaireAsync(ServiceMetier.Commentaire commentaire)
        {
            return base.Channel.AddCommentaireAsync(commentaire);
        }
        
        public bool UpdateCommentaire(ServiceMetier.Commentaire commentaire)
        {
            return base.Channel.UpdateCommentaire(commentaire);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCommentaireAsync(ServiceMetier.Commentaire commentaire)
        {
            return base.Channel.UpdateCommentaireAsync(commentaire);
        }
        
        public bool DeleteCommentaire(int id)
        {
            return base.Channel.DeleteCommentaire(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommentaireAsync(int id)
        {
            return base.Channel.DeleteCommentaireAsync(id);
        }
        
        public ServiceMetier.Commentaire GetCommentaire(int id)
        {
            return base.Channel.GetCommentaire(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Commentaire> GetCommentaireAsync(int id)
        {
            return base.Channel.GetCommentaireAsync(id);
        }
        
        public ServiceMetier.Commentaire[] GetAllCommentaires()
        {
            return base.Channel.GetAllCommentaires();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Commentaire[]> GetAllCommentairesAsync()
        {
            return base.Channel.GetAllCommentairesAsync();
        }
        
        public bool AddFavori(ServiceMetier.Favori favori)
        {
            return base.Channel.AddFavori(favori);
        }
        
        public System.Threading.Tasks.Task<bool> AddFavoriAsync(ServiceMetier.Favori favori)
        {
            return base.Channel.AddFavoriAsync(favori);
        }
        
        public bool UpdateFavori(ServiceMetier.Favori favori)
        {
            return base.Channel.UpdateFavori(favori);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFavoriAsync(ServiceMetier.Favori favori)
        {
            return base.Channel.UpdateFavoriAsync(favori);
        }
        
        public bool DeleteFavori(int id)
        {
            return base.Channel.DeleteFavori(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFavoriAsync(int id)
        {
            return base.Channel.DeleteFavoriAsync(id);
        }
        
        public ServiceMetier.Favori GetFavori(int id)
        {
            return base.Channel.GetFavori(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Favori> GetFavoriAsync(int id)
        {
            return base.Channel.GetFavoriAsync(id);
        }
        
        public ServiceMetier.Favori[] GetAllFavoris()
        {
            return base.Channel.GetAllFavoris();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Favori[]> GetAllFavorisAsync()
        {
            return base.Channel.GetAllFavorisAsync();
        }
        
        public bool AddJury(ServiceMetier.Jury jury)
        {
            return base.Channel.AddJury(jury);
        }
        
        public System.Threading.Tasks.Task<bool> AddJuryAsync(ServiceMetier.Jury jury)
        {
            return base.Channel.AddJuryAsync(jury);
        }
        
        public bool UpdateJury(ServiceMetier.Jury jury)
        {
            return base.Channel.UpdateJury(jury);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateJuryAsync(ServiceMetier.Jury jury)
        {
            return base.Channel.UpdateJuryAsync(jury);
        }
        
        public bool DeleteJury(int id)
        {
            return base.Channel.DeleteJury(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteJuryAsync(int id)
        {
            return base.Channel.DeleteJuryAsync(id);
        }
        
        public ServiceMetier.Jury GetJury(int id)
        {
            return base.Channel.GetJury(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Jury> GetJuryAsync(int id)
        {
            return base.Channel.GetJuryAsync(id);
        }
        
        public ServiceMetier.Jury[] GetAllJuries()
        {
            return base.Channel.GetAllJuries();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Jury[]> GetAllJuriesAsync()
        {
            return base.Channel.GetAllJuriesAsync();
        }
        
        public bool AddLecteur(ServiceMetier.Lecteur lecteur)
        {
            return base.Channel.AddLecteur(lecteur);
        }
        
        public System.Threading.Tasks.Task<bool> AddLecteurAsync(ServiceMetier.Lecteur lecteur)
        {
            return base.Channel.AddLecteurAsync(lecteur);
        }
        
        public bool updateLecteur(int id, ServiceMetier.Lecteur lecteur)
        {
            return base.Channel.updateLecteur(id, lecteur);
        }
        
        public System.Threading.Tasks.Task<bool> updateLecteurAsync(int id, ServiceMetier.Lecteur lecteur)
        {
            return base.Channel.updateLecteurAsync(id, lecteur);
        }
        
        public bool DeleteLecteur(int id)
        {
            return base.Channel.DeleteLecteur(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLecteurAsync(int id)
        {
            return base.Channel.DeleteLecteurAsync(id);
        }
        
        public ServiceMetier.Lecteur GetLecteur(int id)
        {
            return base.Channel.GetLecteur(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Lecteur> GetLecteurAsync(int id)
        {
            return base.Channel.GetLecteurAsync(id);
        }
        
        public ServiceMetier.Lecteur[] GetAllLecteurs()
        {
            return base.Channel.GetAllLecteurs();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> GetAllLecteursAsync()
        {
            return base.Channel.GetAllLecteursAsync();
        }
        
        public ServiceMetier.Lecteur[] getLecteurs(string prenom, string nom)
        {
            return base.Channel.getLecteurs(prenom, nom);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> getLecteursAsync(string prenom, string nom)
        {
            return base.Channel.getLecteursAsync(prenom, nom);
        }
        
        public bool AddLike(ServiceMetier.Like like)
        {
            return base.Channel.AddLike(like);
        }
        
        public System.Threading.Tasks.Task<bool> AddLikeAsync(ServiceMetier.Like like)
        {
            return base.Channel.AddLikeAsync(like);
        }
        
        public bool UpdateLike(ServiceMetier.Like like)
        {
            return base.Channel.UpdateLike(like);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLikeAsync(ServiceMetier.Like like)
        {
            return base.Channel.UpdateLikeAsync(like);
        }
        
        public bool DeleteLike(int id)
        {
            return base.Channel.DeleteLike(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLikeAsync(int id)
        {
            return base.Channel.DeleteLikeAsync(id);
        }
        
        public ServiceMetier.Like GetLike(int id)
        {
            return base.Channel.GetLike(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Like> GetLikeAsync(int id)
        {
            return base.Channel.GetLikeAsync(id);
        }
        
        public ServiceMetier.Like[] GetAllLikes()
        {
            return base.Channel.GetAllLikes();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Like[]> GetAllLikesAsync()
        {
            return base.Channel.GetAllLikesAsync();
        }
        
        public bool AddMembreJury(ServiceMetier.MembreJury membreJury)
        {
            return base.Channel.AddMembreJury(membreJury);
        }
        
        public System.Threading.Tasks.Task<bool> AddMembreJuryAsync(ServiceMetier.MembreJury membreJury)
        {
            return base.Channel.AddMembreJuryAsync(membreJury);
        }
        
        public bool UpdateMembreJury(ServiceMetier.MembreJury membreJury)
        {
            return base.Channel.UpdateMembreJury(membreJury);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMembreJuryAsync(ServiceMetier.MembreJury membreJury)
        {
            return base.Channel.UpdateMembreJuryAsync(membreJury);
        }
        
        public bool DeleteMembreJury(int id)
        {
            return base.Channel.DeleteMembreJury(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMembreJuryAsync(int id)
        {
            return base.Channel.DeleteMembreJuryAsync(id);
        }
        
        public ServiceMetier.MembreJury[] GetAllMembresJury()
        {
            return base.Channel.GetAllMembresJury();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.MembreJury[]> GetAllMembresJuryAsync()
        {
            return base.Channel.GetAllMembresJuryAsync();
        }
        
        public ServiceMetier.MembreJury GetMembreJury(int id)
        {
            return base.Channel.GetMembreJury(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.MembreJury> GetMembreJuryAsync(int id)
        {
            return base.Channel.GetMembreJuryAsync(id);
        }
        
        public ServiceMetier.MembreJury[] SearchMembresJury(string nom, string prenom, string profession)
        {
            return base.Channel.SearchMembresJury(nom, prenom, profession);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.MembreJury[]> SearchMembresJuryAsync(string nom, string prenom, string profession)
        {
            return base.Channel.SearchMembresJuryAsync(nom, prenom, profession);
        }
        
        public bool AddVerdict(ServiceMetier.Verdict verdict)
        {
            return base.Channel.AddVerdict(verdict);
        }
        
        public System.Threading.Tasks.Task<bool> AddVerdictAsync(ServiceMetier.Verdict verdict)
        {
            return base.Channel.AddVerdictAsync(verdict);
        }
        
        public bool UpdateVerdict(ServiceMetier.Verdict verdict)
        {
            return base.Channel.UpdateVerdict(verdict);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateVerdictAsync(ServiceMetier.Verdict verdict)
        {
            return base.Channel.UpdateVerdictAsync(verdict);
        }
        
        public bool DeleteVerdict(int id)
        {
            return base.Channel.DeleteVerdict(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteVerdictAsync(int id)
        {
            return base.Channel.DeleteVerdictAsync(id);
        }
        
        public ServiceMetier.Verdict[] GetAllVerdicts()
        {
            return base.Channel.GetAllVerdicts();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Verdict[]> GetAllVerdictsAsync()
        {
            return base.Channel.GetAllVerdictsAsync();
        }
        
        public ServiceMetier.Verdict GetVerdict(int id)
        {
            return base.Channel.GetVerdict(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Verdict> GetVerdictAsync(int id)
        {
            return base.Channel.GetVerdictAsync(id);
        }
        
        public ServiceMetier.Verdict[] SearchVerdicts(string statut, string mention)
        {
            return base.Channel.SearchVerdicts(statut, mention);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Verdict[]> SearchVerdictsAsync(string statut, string mention)
        {
            return base.Channel.SearchVerdictsAsync(statut, mention);
        }
        
        public bool AddVu(ServiceMetier.Vu vu)
        {
            return base.Channel.AddVu(vu);
        }
        
        public System.Threading.Tasks.Task<bool> AddVuAsync(ServiceMetier.Vu vu)
        {
            return base.Channel.AddVuAsync(vu);
        }
        
        public bool UpdateVu(ServiceMetier.Vu vu)
        {
            return base.Channel.UpdateVu(vu);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateVuAsync(ServiceMetier.Vu vu)
        {
            return base.Channel.UpdateVuAsync(vu);
        }
        
        public bool DeleteVu(int id)
        {
            return base.Channel.DeleteVu(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteVuAsync(int id)
        {
            return base.Channel.DeleteVuAsync(id);
        }
        
        public ServiceMetier.Vu GetVu(int id)
        {
            return base.Channel.GetVu(id);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Vu> GetVuAsync(int id)
        {
            return base.Channel.GetVuAsync(id);
        }
        
        public ServiceMetier.Vu[] GetAllVus()
        {
            return base.Channel.GetAllVus();
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Vu[]> GetAllVusAsync()
        {
            return base.Channel.GetAllVusAsync();
        }
        
        public ServiceMetier.Expert[] SearchExperts(string nom, string prenom)
        {
            return base.Channel.SearchExperts(nom, prenom);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Expert[]> SearchExpertsAsync(string nom, string prenom)
        {
            return base.Channel.SearchExpertsAsync(nom, prenom);
        }
        
        public ServiceMetier.Lecteur[] SearchLecteurs(string nom, string prenom)
        {
            return base.Channel.SearchLecteurs(nom, prenom);
        }
        
        public System.Threading.Tasks.Task<ServiceMetier.Lecteur[]> SearchLecteursAsync(string nom, string prenom)
        {
            return base.Channel.SearchLecteursAsync(nom, prenom);
        }
        
        public bool UserExists(string email)
        {
            return base.Channel.UserExists(email);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string email)
        {
            return base.Channel.UserExistsAsync(email);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:57401/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
